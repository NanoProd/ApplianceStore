//----------------------------------------------------
//Assignment 1
//Question 1
//Written by: Joshua-James Nantel-Ouimet (#40131733)
//----------------------------------------------------

package assignment1;
import java.util.Scanner;

public class Main {
	
	// method to display menu
	public static void displayMenu() {
		System.out.println("What do you want to do?");
		System.out.println("\t1.  Enter new appliances (password required)");
		System.out.println("\t2.  Change information of an appliance (password required)");
		System.out.println("\t3.  Display all appliances by a specific brand");
		System.out.println("\t4.  Display all appliances under a certain price");
		System.out.println("\t5.  Quit");
		System.out.println("Please enter your choice >");
	}
	//method to prompt user for password
	public static void askPassword() {
		System.out.println("Please enter your password:");
	}
	
	
	
	//main method
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//display welcome message
		System.out.println("----------------------------------");
		System.out.println("Welcome to my appliance program");
		System.out.println("----------------------------------\n");
		
		//attributes
		int maxAppliances = 0;
		int menuChoice = 0;
		int quantityWanted = 0;
		int quantityOfObjects = 0;
		Scanner keyboard = new Scanner(System.in);
		String passwordEntered = "";
		int passwordAttempts = 0;
		final String PASSWORD = "c249";
		boolean validAccess = false;
		
		
		//prompt the store owner for maximum number of appliances
		System.out.println("What is the maximum amount of appliances that your store can contain?");
		maxAppliances = keyboard.nextInt();
		Appliance[] inventory = new Appliance[maxAppliances];
		
		
		
		
		//display list of program options
		//prompt user for choice till valid input
		do {
			displayMenu();
			menuChoice = keyboard.nextInt();
			keyboard.nextLine(); //move cursor to next line
		} while(menuChoice < 1 || menuChoice > 5);
		
		
		if(menuChoice == 1) {
			while(passwordAttempts <= 12) {
				if(passwordAttempts == 3 || passwordAttempts == 6 || passwordAttempts == 9 || passwordAttempts == 12) {
					if(passwordAttempts == 12) {
						System.out.println("Program detected suspicious activity and will terminate immediately!");
						System.exit(0);
					} else {
						
						do {
							displayMenu();
							menuChoice = keyboard.nextInt();
							keyboard.nextLine(); //move cursor to next line
						}while(menuChoice<1 || menuChoice > 5);
						
						if(menuChoice == 1) {
							askPassword();
							passwordEntered = keyboard.nextLine();
							if(passwordEntered.equals(PASSWORD)) {
								validAccess = true;
								System.out.println("Correct Password");
								passwordAttempts = 0;
								break;
							} else {
								passwordAttempts++;
							}
						}else {
							break;
						}
					}
				} else {
					askPassword();
					passwordEntered = keyboard.nextLine();
					if(passwordEntered.equals(PASSWORD)) {
						validAccess = true;
						System.out.println("Correct Password");
						passwordAttempts = 0;
						break;
					} else {
						passwordAttempts++;
					}
				}
			}
			
			
			// continue from here
			if(validAccess) {
				System.out.println("How many appliances would you like to enter?: ");
				quantityWanted = keyboard.nextInt();
				if(quantityWanted > 0 && quantityWanted <= (maxAppliances - quantityOfObjects)) {
					for(int i = 0; i < quantityWanted; i++) {
						keyboard.nextLine(); // make sure cursor is on new line
						System.out.println("What is the type of appliance #" + (quantityOfObjects + 1) + "?");
						String typeEntered = keyboard.nextLine();
						System.out.println("What is the brand of appliance #" + (quantityOfObjects + 1) + "?");
						String brandEntered = keyboard.nextLine();
						System.out.println("What is the price of appliance #" + (quantityOfObjects + 1)  + "?");
						double priceEntered = keyboard.nextDouble();
						keyboard.nextLine(); //get cursor to next line
						
						//create object with this information
						inventory[quantityOfObjects] = new Appliance(typeEntered, brandEntered, priceEntered);
						quantityOfObjects++;
					}
				} else {
					System.out.println("We are unable to add them because this would exceed the max amount of appliances, there is this much room left: " + (maxAppliances - quantityOfObjects)); 
				}
			}
			
			for(int i = 0; i < 5; i++) {
				System.out.println(inventory[i].toString());
				System.out.println();
			}
			
			
			
		} else { 
			System.out.println("Other options");
		}
		
		
		
		
		
		
		System.out.println("Success");
		//close Scanner object
		keyboard.close();


	}

}
		

